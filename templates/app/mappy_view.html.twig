{% extends "base.html.twig"  %}
{% set page = 'app' %}
{% block title %}{{ map.PlaceNameSub.Name_en ?? '' }} {{ map.PlaceName.Name_en }} - Mappy - {{ app.name }} - App - XIVAPI{% endblock %}

{% block body %}
<div class="two-pane">
    <aside>
        {% include 'app/nav.html.twig' %}
    </aside>
    <main class="nomax">
        <h1>
            {{ app.name }}
            <div class="fr">
                <a href="{{ path('app_delete', { id: app.id }) }}" class="btn btn-danger">DELETE APPLICATION</a>
            </div>
        </h1>

        <br>

        <div>
            <a href="{{ path('app_manage', { id: app.id }) }}" class="btn btn-outline-primary">Application</a>
            &nbsp;&nbsp;&nbsp;
            <a href="{{ path('app_manage_map', { id: app.id }) }}" class="btn btn-primary">Mapping Data</a>
        </div>

        <br><br>

        {% if allowed %}

            <h4>
                <strong>{{ map.PlaceNameSub.Name_en ?? '' }} {{ map.PlaceName.Name_en }} - {{ map.PlaceNameRegion.Name_en }}</strong>
            </h4>

            {% if complete.complete %}
            <br>
            <div class="alert alert-success">
                <h3>Map marked as completed</h3>
                <p>Date: {{ complete.updated|dateRelative }}</p>
                <br>
                <p><strong>Notes:</strong> {{ complete.notes ?: 'n/a' }}</p>
            </div>
            <br>
            {% endif %}

            <p>
                Positions are queried behind the scenes, you can adjust the refresh speed and the fetch count
                as desired, this is up to you as too many positions too fast may make your browser laggy. You
                can toggle on coverage view which will show you a rough distribution of map coverage to see
                how well this zone has been mapped. Once you have completed a map please mark it as complete!
            </p>

            <p>
                API Endpoint: <a href="/Map/{{ map.ID }}" target="_blank">/Map/{{ map.ID }}</a>
            </p>

            <table class="table table-sm table-bordered">
                <thead>
                    <tr>
                        <th width="10%">Positions</th>
                        <th width="20%">Status</th>
                        <th width="25%">Refresh Speed (ms)</th>
                        <th width="25%">Position fetch count</th>
                        <th width="20%">Toggle Coverage</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><h3 class="pos-count">0</h3></td>
                        <td><small class="pos-ready">Ready</small></td>
                        <td>
                            <input type="text" class="form-control pos-speed" placeholder="Speed (ms)" value="1000">
                        </td>
                        <td>
                            <input type="text" class="form-control pos-size" placeholder="Fetch count" value="20">
                        </td>
                        <td>
                            <button class="btn btn-primary pos-toggle">Toggle</button>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="6">
                            Default: <img src="/img-misc/mappy/object_2x.png" height="12">
                            Monster: <img src="/img-misc/mappy/enemy_2x.png" height="12">
                            NPC: <img src="/img-misc/mappy/npc_2x.png" height="12">
                            Aetheryte: <img src="/img-misc/mappy/aetheryte.png" height="12">
                            Gathering: <img src="/img-misc/mappy/gathering_2x.png" height="12">
                        </td>
                    </tr>
                    <tr class="table-bg">
                        <td colspan="6">
                            <form method="post" action="{{ path('app_manage_map_update', { id: app.id, map: map.ID }) }}">
                                <div class="form-group">
                                    <label for="notes">Leave a note or mark the map as completed.</label>
                                    <textarea class="form-control" id="notes" name="notes" placeholder="Notes">{{ complete.notes }}</textarea>
                                </div>
                                <div class="form-group form-check">
                                    <div class="flex">
                                        <div class="flex2">
                                            <input type="checkbox" class="form-check-input" id="complete" name="complete" {{ complete.complete ? 'checked' : '' }}>
                                            <label class="form-check-label" for="complete"><strong>Mark map as completed</strong></label><br>
                                            <small><strong>Updated:</strong> {{ complete.id ? complete.updated|dateRelative : 'Never' }}</small>
                                        </div>
                                        <div class="flex2 tar">
                                            <button type="submit" class="btn btn-success">Save</button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </td>
                    </tr>
                </tbody>
            </table>

            <div class="pos-map">
                <img src="{{ map.MapFilename }}">
            </div>

            <br><br>

            <h4>Map Data</h4>
            <p>Anything strange? Mention it in the Discord #beta channel.</p>

            <table class="table table-sm table-bordered pos-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Type</th>
                        <th>Name</th>
                        <th>Pixel Position</th>
                        <th>In-Game Poisition</th>
                    </tr>
                </thead>
                <tbody>

                </tbody>
            </table>

            <script>
            let positions = {}, count = 0, speed = 1000, size = 20, offset = 0, coverage = false;
            let speedLocalStorage = localStorage.getItem('speedLocalStorage'),
                sizeLocalStorage = localStorage.getItem('sizeLocalStorage');

            speed = speedLocalStorage ? speedLocalStorage : speed;
            size = sizeLocalStorage ? sizeLocalStorage : size;

            let $speed = $('.pos-speed'),
                $size  = $('.pos-size');

            $speed.val(speed);
            $size.val(size);

            $speed.on('keyup', function() {
                speed = parseInt($(this).val().trim());
                speed = speed < 100 ? 100 : speed;
                localStorage.setItem("speedLocalStorage", speed)
            });

            $size.on('keyup', function() {
                size = parseInt($(this).val().trim());
                size = size < 1 ? 1 : size;
                localStorage.setItem("sizeLocalStorage", size)
            });

            $('.pos-toggle').on('click', function() {
                $('.pos-map span').toggleClass('pos-coverage');
                coverage = !coverage;
            });

            function getPositions() {
                setTimeout(function() {
                    $('.pos-ready').html('Fetching...');
                    $.ajax({
                        url: '/app/{{ app.id }}/{{ map.ID }}/data?offset='+ offset + '&size='+ size,
                        success: function (response) {
                            for(let i in response) {
                                let pos = response[i];
                                if (typeof positions[i] === 'undefined') {
                                    positions[i] = pos;
                                    addPosition(i, pos);
                                }
                            }

                            $('.pos-ready').html('Ready!');
                            getPositions();
                        }
                    })
                }, speed);
            }
            function addPosition(id, pos) {
                count++;
                offset++;

                let span = '<span class="pos-'+ pos[1] +' '+ (coverage ? 'pos-coverage' : '') +'" style="left:'+ (pos[2]-10) +'px;top:'+ (pos[3]-10) +'px;"></span>';
                $('.pos-map').append(span);
                $('.pos-count').html(count);

                let positionPixels = (pos[2]*2) +' x '+ pos[3],
                    positionInGame = 'X: '+pos[4] +', Y: '+ pos[5];

                let row = '<tr><td><code>'+ id +'</code></td><td>'+ pos[1] +'</td><td><strong>'+ pos[0] +'</strong></td><td><small>'+ positionPixels +'</small></td><td><small>'+ positionInGame +'</small></td></tr>';
                $('.pos-table tbody').append(row);
            }
            $(function() {
                getPositions();
            });
            </script>

        {% else %}
        <div class="alert alert-warning">
            <h2>No Access</h2>
            At this time the mapping app is private as it sends a lot of data
            to XIVAPI and needs special attention. If you are interested in adding map
            data to XIVAPI then please message @vekien on the Discord chat :)
        </div>
        {% endif %}
    </main>
</div>

{% endblock %}
